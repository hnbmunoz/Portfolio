// ==========================================================================
// Mixins
// ==========================================================================

// Import required modules for built-in functions
@use 'sass:string';
@use 'sass:meta';
@use 'variables' as *;

// Typography Mixins
// ==========================================================================

@mixin font-size($size, $line-height: null) {
  font-size: $size;
  @if $line-height {
    line-height: $line-height;
  }
}

@mixin heading-base {
  font-family: $font-secondary;
  font-weight: $font-weight-bold;
  line-height: $line-height-tight;
  color: $neutral-900;
}

@mixin body-text {
  font-family: $font-primary;
  font-weight: $font-weight-regular;
  line-height: $line-height-normal;
  color: $neutral-700;
}

@mixin text-truncate {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

@mixin text-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Layout Mixins
// ==========================================================================

@mixin flex-center {
  display: flex;
  align-items: center;
  justify-content: center;
}

@mixin flex-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}

@mixin flex-column {
  display: flex;
  flex-direction: column;
}

@mixin absolute-center {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

@mixin container($max-width: $breakpoint-xl) {
  width: 100%;
  max-width: $max-width;
  margin: 0 auto;
  padding: 0 $spacing-4;

  @media (min-width: $breakpoint-sm) {
    padding: 0 $spacing-6;
  }

  @media (min-width: $breakpoint-lg) {
    padding: 0 $spacing-8;
  }
}

// Responsive Mixins
// ==========================================================================

@mixin respond-to($breakpoint) {
  @if $breakpoint == sm {
    @media (min-width: $breakpoint-sm) {
      @content;
    }
  }
  @if $breakpoint == md {
    @media (min-width: $breakpoint-md) {
      @content;
    }
  }
  @if $breakpoint == lg {
    @media (min-width: $breakpoint-lg) {
      @content;
    }
  }
  @if $breakpoint == xl {
    @media (min-width: $breakpoint-xl) {
      @content;
    }
  }
  @if $breakpoint == 2xl {
    @media (min-width: $breakpoint-2xl) {
      @content;
    }
  }
}

// Button Mixins
// ==========================================================================

@mixin button-base {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  border: none;
  border-radius: $border-radius-md;
  font-family: $font-primary;
  font-weight: $font-weight-medium;
  text-decoration: none;
  cursor: pointer;
  transition: all 0.2s ease-in-out;
  
  &:disabled {
    opacity: 0.5;
    cursor: not-allowed;
  }
}

@mixin button-size($padding-y, $padding-x, $font-size) {
  padding: $padding-y $padding-x;
  font-size: $font-size;
}

@mixin button-variant($bg-color, $text-color, $hover-bg: null, $hover-text: null) {
  background-color: $bg-color;
  color: $text-color;
  
  &:hover:not(:disabled) {
    @if $hover-bg {
      background-color: $hover-bg;
    } @else {
      // Check if $bg-color is a CSS custom property
      @if string.index(meta.inspect($bg-color), 'var(') == 1 {
        // For CSS custom properties, use a filter to darken
        background-color: $bg-color;
        filter: brightness(0.9);
      } @else {
        // For regular colors, use darken function
        background-color: darken($bg-color, 10%);
      }
    }
    color: $hover-text or $text-color;
  }
}

// Card Mixins
// ==========================================================================

@mixin card-base {
  background-color: white;
  border-radius: $border-radius-lg;
  box-shadow: $shadow-base;
  overflow: hidden;
}

@mixin card-hover {
  transition: all 0.3s ease-in-out;
  
  &:hover {
    transform: translateY(-2px);
    box-shadow: $shadow-lg;
  }
}

// Animation Mixins
// ==========================================================================

@mixin fade-in($duration: 0.3s) {
  opacity: 0;
  animation: fadeIn $duration ease-in-out forwards;
}

@keyframes fadeIn {
  to {
    opacity: 1;
  }
}

@mixin slide-up($duration: 0.3s, $distance: 20px) {
  opacity: 0;
  transform: translateY($distance);
  animation: slideUp $duration ease-out forwards;
}

@keyframes slideUp {
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

// Utility Mixins
// ==========================================================================

@mixin visually-hidden {
  position: absolute !important;
  width: 1px !important;
  height: 1px !important;
  padding: 0 !important;
  margin: -1px !important;
  overflow: hidden !important;
  clip: rect(0, 0, 0, 0) !important;
  white-space: nowrap !important;
  border: 0 !important;
}

@mixin focus-ring($color: $primary-500) {
  outline: 2px solid transparent;
  outline-offset: 2px;
  
  &:focus-visible {
    outline: 2px solid $color;
    outline-offset: 2px;
  }
}

@mixin hover-lift {
  transition: transform 0.2s ease-in-out;
  
  &:hover {
    transform: translateY(-1px);
  }
}